{"version":3,"sources":["components/NavigationBar/NavigationBar.jsx","components/BranchIcon/BranchIcon.js","components/MuiAlert/MuiAlert.jsx","actions/repos.js","constants/ActionTypes.js","actions/branches.js","actions/commits.js","actions/prs.js","layouts/AppLayout/AppLayout.jsx","views/NewRepoView/NewRepoView.jsx","views/RepoView/RepoView.jsx","views/BranchesView/BranchesView.jsx","views/BranchView/BranchView.jsx","views/CommitView/CommitView.jsx","views/PRListView/PRListView.jsx","views/PRCreateView/PRCreateView.jsx","routes.js","config/index.js","helpers/Api/Api.js","theme.js","reducers/repos.js","reducers/branches.js","reducers/commits.js","reducers/prs.js","reducers/index.js","store.js","middleware/api.js","start-client.js","index.js"],"names":["useStyles","makeStyles","theme","appTitle","letterSpacing","fontWeight","NavigationBar","props","classes","React","useState","setAnchorEl","document","title","setTitle","AppBar","color","position","Helmet","onChangeClientState","newState","Toolbar","location","pathname","IconButton","onClick","goBack","Typography","variant","componet","className","style","flexGrow","textTransform","repoName","marginLeft","evt","currentTarget","Icon","BranchIcon","SvgIcon","viewBox","d","success","backgroundColor","green","warning","yellow","error","red","default","MuiAlert","type","Snackbar","ContentProps","anchorOrigin","vertical","horizontal","autoHideDuration","message","onClose","open","fetchRepo","request","op","path","cloneRepo","url","data","repo_url","deleteRepo","fetchBranches","fetchCommits","ref","fetchCommit","commit_id","listPrs","createPr","updatePrStatus","prId","status","mergePr","AppLayout","state","snackMsg","showSnack","snackType","msg","setState","hideSnack","prevProps","prevState","snapshot","this","route","repoLoaded","repoCloned","routes","repoDeleted","Fragment","history","main","renderRoutes","showMessage","to","Component","connect","repo","name","repoUrl","fetch","loaded","clone","dispatch","bindActionCreators","withStyles","margin","spacing","defaultRepos","NewRepoView","onChangeUrl","target","value","repoClone","repoFetch","Paper","mainFrame","paragraph","display","TextField","label","autoFocus","width","onChange","Fab","List","map","key","ListItem","button","ListItemAvatar","ListItemText","primary","secondary","height","marginTop","loading","LinearProgress","top","left","transform","padding","boxShadow","shadows","RepoView","Link","href","Divider","Card","CardActionArea","component","RouterLink","CardMedia","textAlign","fontSize","CardContent","gutterBottom","BranchesView","branches","Grid","container","branch","ref_name","item","md","BranchView","loadBranch","search","split","commits","branchName","commit","author","email","Date","date","toLocaleString","CommitView","match","params","tree","length","file","new","PRListView","prStatus","newStatus","mergeState","listState","updateState","listStateloading","prs","pr","CardHeader","avatar","Avatar","charAt","toUpperCase","subheader","authorName","authorEmail","action","Chip","size","icon","openState","closedState","mergedState","id","clickable","compare_branch","base_branch","createdAt","description","mergedAt","CardActions","Button","justyfy","alignItems","list","update","merge","purple","PRCreateView","baseBranch","compareBranch","useDefaultAuthor","mustRedirect","checked","console","log","preventDefault","createState","onSubmit","required","fullWidth","multiline","rows","FormControl","InputLabel","Select","labelId","MenuItem","disabled","direction","justify","align","FormControlLabel","control","Switch","exact","create","settings","methods","formatUrl","adjustedPath","Api","forEach","method","headers","Promise","resolve","reject","superagent","query","set","Object","keys","send","end","err","body","createMuiTheme","palette","blue","pink","initialState","delete","getRequestKey","actionType","toLowerCase","commitSha","loadTemplate","reducers","reduxAsyncConnect","result","configureStore","apiHelper","api","middlewares","applyMiddleware","routerMiddleware","thunk","getState","next","actionPromise","rest","Array","isArray","all","then","createStore","combineReducers","router","connectRouter","createBrowserHistory","store","hydrate","getElementById","client"],"mappings":"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","file":"static/js/main.56b7a900.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {\r\n    makeStyles,\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    Icon,\r\n    Menu,\r\n    MenuItem, ListItemIcon, ListItemText,\r\n} from \"@material-ui/core\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet/es/Helmet\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appTitle: {\r\n        letterSpacing: '2px',\r\n        fontWeight: '500',\r\n    },\r\n}));\r\n\r\n\r\nfunction NavigationBar(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [title, setTitle] = React.useState(document.title);\r\n    const handleClose = () => setAnchorEl(null);\r\n    const handleClick = (evt) => setAnchorEl(evt.currentTarget);\r\n    return (\r\n        <AppBar color={\"primary\"} position={\"fixed\"}>\r\n            <Helmet onChangeClientState={(newState) => setTitle(newState.title)}/>\r\n            <Toolbar>\r\n                {props.location.pathname !== '/repo' && (\r\n                    <IconButton onClick={props.goBack} color={\"inherit\"}>\r\n                        <BackIcon/>\r\n                    </IconButton>\r\n                )}\r\n                <Typography variant={\"h6\"} componet={\"h1\"} className={classes.appTitle}>\r\n                    GIT HISTORY\r\n                </Typography>\r\n                <div style={{flexGrow: 1}}/>\r\n\r\n                <Typography style={{textTransform: 'capitalize'}} variant={\"h5\"} componet={\"h1\"}\r\n                            className={classes.appTitle}>\r\n                    {props.repoName}\r\n                </Typography>\r\n                <Typography style={{marginLeft: 8}} variant={\"subtitle2\"}>{`${title}`}</Typography>\r\n                <div style={{flexGrow: 1}}/>\r\n\r\n                <IconButton onClick={handleClick} color={\"inherit\"}>\r\n                    <Icon>more_vert</Icon>\r\n                </IconButton>\r\n                {/*Not Supported*/}\r\n                {/*<Menu open={Boolean(anchorEl)} anchorEl={anchorEl} onClose={handleClose}>\r\n                    <MenuItem onClick={props.deleteRepo}>\r\n                        <ListItemIcon>\r\n                            <Icon>exit_to_app</Icon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Salir\"}/>\r\n                    </MenuItem>\r\n                </Menu>*/}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nNavigationBar.propTypes = {\r\n    repoName: PropTypes.string,\r\n    goBack: PropTypes.func,\r\n    location: PropTypes.object,\r\n    deleteRepo: PropTypes.func\r\n};\r\n\r\n\r\nexport default NavigationBar;","\r\nimport React from \"react\";\r\nimport {SvgIcon} from \"@material-ui/core\";\r\n\r\nconst BranchIcon = (props) => (<SvgIcon viewBox={'0 0 50 50'} {...props}>\r\n    <path\r\n        d=\"M 13 3 C 10.25 3 8 5.25 8 8 C 8 10.40625 9.726563 12.4375 12 12.90625 L 12 37.09375 C 9.726563 37.5625 8 39.59375 8 42 C 8 44.75 10.25 47 13 47 C 15.75 47 18 44.75 18 42 C 18 39.605469 16.289063 37.574219 14.03125 37.09375 C 14.21875 33.695313 15.445313 31.957031 17.28125 30.78125 C 19.28125 29.503906 22.15625 28.964844 25.15625 28.46875 C 28.15625 27.972656 31.28125 27.503906 33.78125 25.90625 C 36.105469 24.421875 37.714844 21.859375 37.9375 17.90625 C 40.238281 17.460938 42 15.425781 42 13 C 42 10.25 39.75 8 37 8 C 34.25 8 32 10.25 32 13 C 32 15.394531 33.710938 17.425781 35.96875 17.90625 C 35.78125 21.300781 34.554688 23.046875 32.71875 24.21875 C 30.71875 25.492188 27.84375 26.003906 24.84375 26.5 C 21.84375 26.996094 18.71875 27.496094 16.21875 29.09375 C 15.375 29.632813 14.628906 30.324219 14 31.15625 L 14 12.90625 C 16.273438 12.4375 18 10.40625 18 8 C 18 5.25 15.75 3 13 3 Z M 13 5 C 14.667969 5 16 6.332031 16 8 C 16 9.667969 14.667969 11 13 11 C 11.332031 11 10 9.667969 10 8 C 10 6.332031 11.332031 5 13 5 Z M 37 10 C 38.667969 10 40 11.332031 40 13 C 40 14.667969 38.667969 16 37 16 C 35.332031 16 34 14.667969 34 13 C 34 11.332031 35.332031 10 37 10 Z M 13 39 C 14.667969 39 16 40.332031 16 42 C 16 43.667969 14.667969 45 13 45 C 11.332031 45 10 43.667969 10 42 C 10 40.332031 11.332031 39 13 39 Z\"></path>\r\n</SvgIcon>)\r\n\r\nexport default BranchIcon;","import React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {\r\n    makeStyles,\r\n    Snackbar,\r\n} from \"@material-ui/core\";\r\nimport {red, yellow, green} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    success: {\r\n        backgroundColor: green[\"500\"],\r\n        color: '#fff',\r\n    },\r\n    warning: {\r\n        backgroundColor: yellow[\"500\"],\r\n        color: '#333',\r\n    },\r\n    error: {\r\n        backgroundColor: red[\"500\"],\r\n        color: '#fff',\r\n    },\r\n    default: {},\r\n}));\r\n\r\n\r\nfunction MuiAlert(props) {\r\n    const classes = useStyles();\r\n    let className = classes.default;\r\n    switch (props.type) {\r\n        case 'success':\r\n            className = classes.success;\r\n            break;\r\n        case 'warning':\r\n            className = classes.warning;\r\n            break;\r\n        case 'error':\r\n            className = classes.error;\r\n            break;\r\n        default:\r\n            className = classes.default;\r\n    }\r\n    return (\r\n        <Snackbar ContentProps={{className: className}} anchorOrigin={{vertical: 'bottom', horizontal: 'left'}} autoHideDuration={6000} className={className} message={props.message} onClose={props.onClose} open={props.open}/>\r\n    )\r\n}\r\n\r\nMuiAlert.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func,\r\n    message: PropTypes.string.isRequired,\r\n    open: PropTypes.bool.isRequired\r\n\r\n};\r\n\r\n\r\nexport default MuiAlert;","import {FETCH_REPO, CLONE_REPO, DELETE_REPO} from \"../constants/ActionTypes\";\r\n\r\nexport const fetchRepo = () => ({\r\n    type: FETCH_REPO,\r\n    request: {\r\n        op: 'get',\r\n        path: '/api/repo'\r\n    }\r\n});\r\n\r\nexport const cloneRepo = (url) => ({\r\n    type: CLONE_REPO,\r\n    request: {\r\n        op: 'post',\r\n        path: '/api/repo/clone',\r\n        data: {repo_url: url}\r\n    }\r\n});\r\n\r\nexport const deleteRepo = () => ({\r\n   type: DELETE_REPO,\r\n   request: {\r\n       op: 'del',\r\n       path: '/api/repo'\r\n   }\r\n});","export const FETCH_REPO = \"FETCH_REPO\";\r\nexport const CLONE_REPO = \"CLONE_REPO\";\r\nexport const DELETE_REPO = \"DELETE_REPO\";\r\n\r\nexport const FETCH_BRANCHES = \"FETCH_BRANCHES\";\r\nexport const FETCH_BRANCH = \"FETCH_BRANCH\";\r\n\r\nexport const FETCH_COMMIT = \"FETCH_COMMIT\";\r\n\r\nexport const FETCH_PR = \"FETCH_PR\";\r\nexport const LIST_PRS = \"LIST_PRS\";\r\nexport const CREATE_PR = \"CREATE_PR\";\r\nexport const UPDATE_PR_STATUS = \"UPDATE_PR_STATUS\";\r\nexport const MERGE_PR = \"MERGE_PR\";","import {FETCH_BRANCHES} from \"../constants/ActionTypes\";\r\n\r\nexport const fetchBranches = () => ({\r\n   type: FETCH_BRANCHES,\r\n   request: {\r\n       op: 'get',\r\n       path: '/api/branches'\r\n   }\r\n});","import {FETCH_BRANCH, FETCH_COMMIT} from \"../constants/ActionTypes\";\r\n\r\nexport const fetchCommits = (ref) => ({\r\n    type: FETCH_BRANCH,\r\n    request: {\r\n        op: 'get',\r\n        path: `/api/commits?ref=${ref}`,\r\n    }\r\n});\r\n\r\nexport const fetchCommit = commit_id => ({\r\n    type: FETCH_COMMIT,\r\n    request: {\r\n        op: 'get',\r\n        path: `/api/commits/${commit_id}`\r\n    }\r\n});","import {FETCH_PR, LIST_PRS, CREATE_PR, UPDATE_PR_STATUS, MERGE_PR} from \"../constants/ActionTypes\";\r\n\r\nexport const fetchPr = (prId) => ({\r\n    type: FETCH_PR,\r\n    request: {\r\n        op: 'get',\r\n        path: '/api/prs/' + prId,\r\n    }\r\n});\r\n\r\nexport const listPrs = () => ({\r\n    type: LIST_PRS,\r\n    request: {\r\n        op: 'get',\r\n        path: '/api/prs'\r\n    }\r\n});\r\n\r\nexport const createPr = (data) => ({\r\n    type: CREATE_PR,\r\n    request: {\r\n        op: 'post',\r\n        path: '/api/prs',\r\n        data,\r\n    }\r\n});\r\n\r\nexport const updatePrStatus = (prId, status) => ({\r\n   type: UPDATE_PR_STATUS,\r\n   request: {\r\n       op: 'put',\r\n       path: `/api/prs/${prId}/status`,\r\n       data: {status}\r\n   }\r\n});\r\n\r\nexport const mergePr = (prId) => ({\r\n    type: MERGE_PR,\r\n    request: {\r\n        op: 'put',\r\n        path: `/api/prs/${prId}/merge`\r\n    }\r\n});\r\n\r\n","import React, {Component} from \"react\";\r\nimport * as PropTypes from 'prop-types';\r\nimport {withStyles, Snackbar} from \"@material-ui/core\";\r\nimport {MuiAlert} from \"../../components\";\r\nimport {NavigationBar} from '../../components';\r\nimport {Helmet} from \"react-helmet/es/Helmet\";\r\nimport {renderRoutes} from \"react-router-config\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {deleteRepo} from \"../../actions\";\r\n\r\nconst styles = theme => ({\r\n    main: {\r\n        margin: theme.spacing(10),\r\n    },\r\n});\r\n\r\nclass AppLayout extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        /*if(prevProps.repoDeleted.loading && this.props.repoDeleted.loaded){\r\n            this.setState({redirect: true, to: '/'});\r\n        }*/\r\n    }\r\n\r\n    state = {\r\n        snackMsg: '',\r\n        showSnack: false,\r\n        snackType: '',\r\n\r\n        /*redirect: false,\r\n        to: '',*/\r\n    };\r\n\r\n    showSnack = (msg, type) => {\r\n        this.setState({showSnack: true, snackMsg: msg, snackType: type});\r\n    }\r\n\r\n    hideSnack = () => {\r\n        this.setState({showSnack: false, snackMsg: '', snackType: ''})\r\n    }\r\n\r\n    render() {\r\n        const {classes, route, repoLoaded, repoCloned, repoDeleted} = this.props;\r\n        const {routes} = route;\r\n        if ((!repoLoaded || repoCloned) && (!repoCloned || repoLoaded)) return <Redirect to={\"/\"}/>\r\n        // if(this.state.redirect) return <Redirect to={this.state.to}/>\r\n        return (\r\n            <React.Fragment>\r\n                <Helmet>\r\n                    <title>GIT HISTORY</title>\r\n                </Helmet>\r\n                <NavigationBar location={this.props.location} goBack={this.props.history.goBack}\r\n                               repoName={this.props.repoName}/>\r\n                <main className={classes.main}>\r\n                    {renderRoutes(routes, {showMessage: this.showSnack})}\r\n                </main>\r\n\r\n                <MuiAlert onClose={this.hideSnack} type={this.state.snackType} message={this.state.snackMsg}\r\n                          open={this.state.showSnack}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nAppLayout.propTypes = {\r\n    classes: PropTypes.object,\r\n    repoName: PropTypes.string,\r\n    repoUrl: PropTypes.string,\r\n    repoLoaded: PropTypes.bool,\r\n    repoCloned: PropTypes.bool,\r\n    repoDeleted: PropTypes.object,\r\n    // deleteRepo: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repoName: state.repo.name,\r\n    repoUrl: state.repo.url,\r\n    repoLoaded: state.repo.fetch.loaded,\r\n    repoCloned: state.repo.clone.loaded,\r\n    // repoDeleted: state.repo.delete,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({deleteRepo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AppLayout));\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    withStyles,\r\n    Typography,\r\n    Paper,\r\n    TextField,\r\n    Fab,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Icon,\r\n    LinearProgress\r\n} from \"@material-ui/core\";\r\nimport GoIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchRepo, cloneRepo} from \"../../actions\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet/es/Helmet\";\r\n\r\nconst styles = theme => ({\r\n    mainFrame: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: theme.spacing(4),\r\n        width: '50vw',\r\n        boxShadow: theme.shadows[5],\r\n    }\r\n});\r\n\r\nconst defaultRepos = [\r\n    {\r\n        name: '99minutos/99minutos-fullstack-interview-test',\r\n        url: 'https://github.com/99minutos/99minutos-fullstack-interview-test.git'\r\n    },\r\n    {\r\n        name: 'Alex9808/git-client',\r\n        url: 'https://github.com/Alex9808/git-client.git'\r\n    },\r\n    {\r\n        name: 'Alex9808/99minutos-fullstack-interview-test',\r\n        url: 'https://github.com/Alex9808/99minutos-fullstack-interview-test.git'\r\n    }\r\n\r\n];\r\n\r\nclass NewRepoView extends Component {\r\n\r\n    state = {\r\n        url: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchRepo();\r\n    }\r\n\r\n    cloneRepo = () => {\r\n        this.props.cloneRepo(this.state.url);\r\n    }\r\n\r\n    onChangeUrl = evt => {\r\n        this.setState({url: evt.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {classes, repoClone, repoFetch} = this.props;\r\n        if (repoFetch.loaded || repoClone.loaded) return <Redirect to={'/repo'}/>\r\n        return (\r\n            <Paper className={classes.mainFrame}>\r\n                <Helmet>\r\n                    <title>Repositorio de Trabajo</title>\r\n                </Helmet>\r\n                <Typography variant={\"h6\"} paragraph>Repositorio de Trabajo</Typography>\r\n                <div style={{display: 'flex'}}>\r\n                    <TextField\r\n                        label={\"URL del Repositorio\"}\r\n                        variant={\"outlined\"}\r\n                        autoFocus\r\n                        style={{width: '85%'}}\r\n                        value={this.state.url}\r\n                        onChange={this.onChangeUrl}\r\n                    />\r\n                    <div style={{flexGrow: 1}}/>\r\n                    <Fab onClick={this.cloneRepo} color={\"primary\"}><GoIcon/></Fab>\r\n                </div>\r\n\r\n                <div>\r\n                    <List>\r\n                        {defaultRepos.map((repo, key) => (\r\n                            <ListItem onClick={() => {\r\n                                this.setState({url: repo.url}, () => this.cloneRepo());\r\n                            }} key={key} button>\r\n                                <ListItemAvatar>\r\n                                    <Icon>source</Icon>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={repo.name}\r\n                                              secondary={repo.url}/>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n\r\n                <div style={{height: 8, marginTop: 6}}>\r\n                    {repoClone.loading && (\r\n                        <LinearProgress variant={\"indeterminate\"}/>\r\n                    )}\r\n                </div>\r\n\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nNewRepoView.propTypes = {\r\n    classes: PropTypes.object,\r\n    repoFetch: PropTypes.object,\r\n    repoClone: PropTypes.object,\r\n\r\n    fetchRepo: PropTypes.func,\r\n    cloneRepo: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    repoFetch: state.repo.fetch,\r\n    repoClone: state.repo.clone\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({fetchRepo, cloneRepo}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(NewRepoView));","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    withStyles,\r\n    Typography,\r\n    Paper,\r\n    Link,\r\n    Divider,\r\n    Grid,\r\n    Card,\r\n    CardActionArea,\r\n    CardMedia,\r\n    CardContent\r\n} from \"@material-ui/core\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport {BranchIcon} from '../../components';\r\n\r\nconst styles = theme => ({});\r\n\r\nclass RepoView extends Component {\r\n    render() {\r\n        const {classes, repoName, repoUrl} = this.props;\r\n        return (\r\n            <>\r\n                <Paper style={{padding: 24}}>\r\n                    <Typography paragraph variant={\"subtitle1\"}>Nombre del Repositorio: <b>{repoName}</b></Typography>\r\n                    <Typography paragraph variant={\"subtitle1\"}>\r\n                        URL del Repositorio: <Link href={repoUrl}\r\n                                                   target={\"_blank\"}>{repoUrl}</Link>\r\n                    </Typography>\r\n\r\n                    <Divider/>\r\n\r\n                    <div style={{display: 'flex'}}>\r\n                        <Card style={{width: 260, marginTop: 16}}>\r\n                            <CardActionArea component={RouterLink} to={'/branches'}>\r\n                                <CardMedia style={{textAlign: 'center'}}>\r\n                                    <BranchIcon style={{fontSize: '100pt'}}/>\r\n                                </CardMedia>\r\n                                <CardContent>\r\n                                    <Typography variant={\"h6\"} gutterBottom>\r\n                                        Branchs\r\n                                    </Typography>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        Ver todas las Branchs del Repositorio\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                        <Card style={{width: 260, marginTop: 16, marginLeft: 24}}>\r\n                            <CardActionArea component={RouterLink} to={'/prs'}>\r\n                                <CardMedia style={{textAlign: 'center'}}>\r\n                                    <BranchIcon style={{fontSize: '100pt'}}/>\r\n                                </CardMedia>\r\n                                <CardContent>\r\n                                    <Typography variant={\"h6\"} gutterBottom>\r\n                                        Pull Requests\r\n                                    </Typography>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        Ver y gestionar todas las Pull Requests del Repositorio\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </div>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nRepoView.propTypes = {\r\n    classes: PropTypes.object,\r\n};\r\nconst mapStateToProps = state => ({\r\n    repoName: state.repo.name,\r\n    repoUrl: state.repo.url\r\n});\r\nexport default connect(mapStateToProps)(withStyles(styles)(RepoView));\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles, Typography, Grid, Card, CardActionArea, CardMedia, CardContent} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {BranchIcon} from \"../../components\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {fetchBranches} from \"../../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Helmet} from \"react-helmet/es/Helmet\";\r\n\r\nconst styles = theme => ({});\r\n\r\nclass BranchesView extends Component {\r\n\r\n    componentDidMount() {\r\n        this.fetchBranches();\r\n    }\r\n\r\n    fetchBranches = () => {\r\n        this.props.fetchBranches();\r\n    }\r\n    render() {\r\n        const {classes, branches} = this.props;\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Branches</title>\r\n                </Helmet>\r\n                <Grid container spacing={2}>\r\n                    {branches.map((branch) => (\r\n                        <Grid key={branch.ref_name} item md={3}>\r\n                            <Card>\r\n                                <CardActionArea component={Link} to={`/branch?ref=${branch.ref_name}`}>\r\n                                    <CardMedia style={{textAlign: 'center'}}>\r\n                                        <BranchIcon style={{fontSize: '100pt'}}/>\r\n                                    </CardMedia>\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant={\"h5\"}>\r\n                                            {branch.name}\r\n                                        </Typography>\r\n                                        <Typography paragraph variant={\"body2\"}>\r\n                                            {branch.ref_name}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nBranchesView.propTypes = {\r\n    classes: PropTypes.object,\r\n    branches: PropTypes.array,\r\n    loading: PropTypes.bool,\r\n    loaded: PropTypes.bool,\r\n    error: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.branches\r\n});\r\nconst mapDispatchToProps = dispatch => bindActionCreators({fetchBranches}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BranchesView));\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles, Paper, Typography, Divider, List, ListItem, ListItemText} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet/es/Helmet\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchCommits} from \"../../actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst styles = theme => ({});\r\n\r\nclass BranchView extends Component {\r\n\r\n    componentDidMount() {\r\n        this.loadBranch();\r\n    }\r\n\r\n    loadBranch = () => {\r\n        let {location, fetchCommits} = this.props;\r\n        fetchCommits(location.search.split('=')[1]);\r\n    }\r\n\r\n    render() {\r\n        const {classes, commits, branchName} = this.props;\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Branch {branchName}</title>\r\n                </Helmet>\r\n\r\n                <Paper style={{padding: 24}}>\r\n                    <Typography variant={\"h5\"} gutterBottom>\r\n                        Commits\r\n                    </Typography>\r\n                    <Divider/>\r\n                    <List>\r\n                        {commits.map(commit => (\r\n                                <ListItem component={Link} to={`/commit/${commit.commit}`} key={commit.commit} button>\r\n                                    <ListItemText primary={<>{commit.message} <Typography\r\n                                        variant={\"caption\"}>by {commit.author.name} ({commit.author.email})</Typography></>}\r\n                                                  secondary={new Date(commit.date).toLocaleString()}\r\n                                    />\r\n                                </ListItem>\r\n                            )\r\n                        )}\r\n                    </List>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nBranchView.propTypes = {\r\n    classes: PropTypes.object,\r\n    branchName: PropTypes.string,\r\n    commits: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    branchName: state.commits.branch.branchName,\r\n    commits: state.commits.branch.commits,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({fetchCommits}, dispatch)\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(BranchView));\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles, Typography, Paper, Divider, List, ListItem, ListItemText, ListItemAvatar, Icon} from \"@material-ui/core\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {fetchCommit} from \"../../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Helmet from \"react-helmet/es/Helmet\";\r\n\r\nconst styles = theme => ({});\r\n\r\nclass CommitView extends Component {\r\n\r\n    componentDidMount() {\r\n        this.fetchCommit();\r\n    }\r\n\r\n    fetchCommit = () => {\r\n        let commit = this.props.match.params.commit;\r\n        this.props.fetchCommit(commit);\r\n    }\r\n\r\n    render() {\r\n        const {classes, author, date, message, tree} = this.props;\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>{message}</title>\r\n                </Helmet>\r\n                <Paper style={{padding: 24}}>\r\n                    <Typography variant={\"subtitle1\"}>Realizada\r\n                        por: <b>{author.name} ({author.email})</b> el día {new Date(date).toLocaleString()}\r\n                    </Typography>\r\n\r\n                    <Divider/>\r\n\r\n                    <Typography paragraph variant={\"h6\"}>Archivos Modificados ({tree.length})</Typography>\r\n\r\n                    <List>\r\n                        {tree.map((file, key) => (\r\n                            <ListItem key={key}>\r\n                                <ListItemAvatar>\r\n                                    <Icon>insert_drive_file</Icon>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={file.new}/>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nCommitView.propTypes = {\r\n    classes: PropTypes.object,\r\n    message: PropTypes.string,\r\n    date: PropTypes.string,\r\n    author: PropTypes.object,\r\n    tree: PropTypes.array,\r\n    fetchCommit: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    message: state.commits.commit.message,\r\n    date: state.commits.commit.date,\r\n    author: state.commits.commit.author,\r\n    tree: state.commits.commit.tree,\r\n\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({fetchCommit}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CommitView));\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    withStyles,\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    CardActionArea,\r\n    CardMedia,\r\n    Button,\r\n    Chip,\r\n    Avatar\r\n} from \"@material-ui/core\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {mergePr, updatePrStatus, listPrs} from \"../../actions\";\r\nimport Helmet from \"react-helmet/es/Helmet\";\r\nimport {red, green, purple} from \"@material-ui/core/colors\";\r\nimport ClosedIcon from \"@material-ui/icons/Close\";\r\nimport OpenIcon from \"@material-ui/icons/Done\";\r\nimport AddIcon from \"@material-ui/icons/AddOutlined\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n\r\n    closedState: {\r\n        backgroundColor: red[\"500\"],\r\n    },\r\n    openState: {\r\n        backgroundColor: green[\"500\"],\r\n    },\r\n    mergedState: {\r\n        backgroundColor: purple[\"500\"],\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nclass PRListView extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.listPrs();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.mergeState.loading && this.props.mergeState.loaded && !this.props.mergeState.loading && !this.props.listState.loading){\r\n            this.props.listPrs();\r\n        }\r\n        if(prevProps.updateState.loading && this.props.updateState.loaded && !this.props.updateState.loading && !this.props.listState.loading){\r\n            this.props.listPrs();\r\n        }\r\n        if((prevProps.mergeState.loading || prevProps.updateState.loading) && (this.props.mergeState.error || this.props.updateState.error) && !this.props.listStateloading){\r\n            //Show error on Update PR Status or on Merge PR\r\n            this.props.showMessage(\"Ocurrio un error\", \"error\");\r\n        }\r\n    }\r\n\r\n    updatePrStatus = (prId, prStatus) => () => {\r\n        let newStatus = prStatus === 0? 1 : 0;\r\n        this.props.updatePrStatus(prId, newStatus);\r\n    }\r\n\r\n    mergePr = prId => () => {\r\n        this.props.mergePr(prId);\r\n    }\r\n\r\n    render() {\r\n        const {classes, prs} = this.props;\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Pull Requests</title>\r\n                </Helmet>\r\n                <Paper style={{padding: 24}}>\r\n                    <Typography variant={'h5'} gutterBottom>Pull Requests</Typography>\r\n\r\n                    <Grid container spacing={3}>\r\n                        {prs.map((pr, key) => (\r\n                            <Grid key={key} item md={4}>\r\n                                <Card>\r\n                                    <CardHeader\r\n                                        avatar={<Avatar>{pr.name.charAt(0).toUpperCase()}</Avatar>}\r\n                                        title={pr.name}\r\n                                        subheader={`${pr.authorName} (${pr.authorEmail})`}\r\n                                        action={<Chip\r\n                                            size=\"small\"\r\n                                            icon={pr.status === 0 || pr.status === 2 ? <OpenIcon/> : <ClosedIcon/>}\r\n                                            style={{color: '#fff'}}\r\n                                            className={pr.status === 0 ? classes.openState : pr.status === 1 ? classes.closedState : classes.mergedState}\r\n                                            label={pr.status === 0 ? 'Open' : pr.status === 1 ? 'Closed' : 'Merged'}\r\n                                            onClick={pr.status !== 2 ? this.updatePrStatus(pr.id, pr.status) : null}\r\n                                            clickable={pr.status !== 2}\r\n                                        />}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography variant={\"subtitle2\"} gutterBottom>\r\n                                            {pr.compare_branch} a {pr.base_branch}\r\n                                        </Typography>\r\n\r\n                                        <Typography variant={\"caption\"} paragraph>\r\n                                            {new Date(pr.createdAt).toLocaleString()}\r\n                                        </Typography>\r\n\r\n                                        <Typography variant={\"body1\"}>\r\n                                            {pr.description}\r\n                                        </Typography>\r\n                                        {pr.status === 2 && (\r\n                                            <Typography variant={\"caption\"}>\r\n                                                Combinada el dia {new Date(pr.mergedAt).toLocaleString()}\r\n                                            </Typography>\r\n                                        )}\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        {pr.status === 0 && (\r\n                                            <Button onClick={this.mergePr(pr.id)} variant={\"contained\"}\r\n                                                    color={\"inherit\"}\r\n                                                    className={classes.mergedState}>\r\n                                                Merge\r\n                                            </Button>\r\n                                        )}\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                        <Grid item container justyfy=\"center\" alignItems=\"center\" md={2}>\r\n                            <Card>\r\n                                <CardActionArea component={RouterLink} to={'/prs/add'}>\r\n                                    <CardMedia>\r\n                                        <AddIcon color={\"primary\"} style={{fontSize: '100pt'}}/>\r\n                                    </CardMedia>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPRListView.propTypes = {\r\n    classes: PropTypes.object,\r\n    prs: PropTypes.array,\r\n    listState: PropTypes.object,\r\n    updateState: PropTypes.object,\r\n    mergeState: PropTypes.object,\r\n    listPrs: PropTypes.func,\r\n    updatePrStatus: PropTypes.func,\r\n    mergePr: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    prs: state.prs.prs,\r\n    listState: state.prs.list,\r\n    updateState: state.prs.update,\r\n    mergeState: state.prs.merge,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({listPrs, updatePrStatus, mergePr}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PRListView));\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    withStyles,\r\n    Typography,\r\n    Paper,\r\n    Grid,\r\n    TextField,\r\n    Select,\r\n    Switch,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    FormControlLabel,\r\n    Button,\r\n    LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport {Helmet} from \"react-helmet/es/Helmet\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {fetchBranches, createPr} from \"../../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n    mainFrame: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: theme.spacing(4),\r\n        width: '50vw',\r\n        boxShadow: theme.shadows[5],\r\n    }\r\n});\r\n\r\nclass PRCreateView extends Component {\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        baseBranch: '',\r\n        compareBranch: '',\r\n        status: 0,\r\n        useDefaultAuthor: true,\r\n        authorName: '',\r\n        authorEmail: '',\r\n\r\n        mustRedirect: false,\r\n        to: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBranches();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.createState.loading && this.props.createState.loaded) {\r\n            this.props.showMessage(\"Pull Request Creada con exito\", \"success\");\r\n            this.setState({mustRedirect: true, to: '/prs'});\r\n        }\r\n        if (prevProps.createState.loading && this.props.createState.error) {\r\n            // Handle Error Message\r\n            this.props.showMessage(\"Ocurrio un error al crear el Pull Request\", \"error\")\r\n        }\r\n    }\r\n\r\n    onChange = target => evt => {\r\n        if (target === 'useDefaultAuthor') return this.setState({[target]: evt.target.checked})\r\n        this.setState({[target]: evt.target.value});\r\n    }\r\n    createPr = evt => {\r\n        console.log(\"Create PR\");\r\n        evt.preventDefault();\r\n        let data = {};\r\n        const {\r\n            name,\r\n            description,\r\n            baseBranch,\r\n            compareBranch,\r\n            status,\r\n            useDefaultAuthor,\r\n            authorName,\r\n            authorEmail\r\n        } = this.state;\r\n\r\n        data['name'] = name;\r\n        data['description'] = description;\r\n        data['base_branch'] = baseBranch;\r\n        data['compare_branch'] = compareBranch;\r\n        data['status'] = status;\r\n        if (!useDefaultAuthor) {\r\n            data['author'] = {\r\n                authorName: authorName,\r\n                authorEmail: authorEmail\r\n            }\r\n        }\r\n\r\n        this.props.createPr(data);\r\n    }\r\n\r\n    render() {\r\n        const {classes, branches, createState} = this.props;\r\n        const {loading} = createState;\r\n        const {\r\n            name,\r\n            description,\r\n            baseBranch,\r\n            compareBranch,\r\n            status,\r\n            useDefaultAuthor,\r\n            authorName,\r\n            authorEmail,\r\n            mustRedirect, to\r\n        } = this.state;\r\n        if (mustRedirect) return <Redirect to={to}/>\r\n        return (\r\n            <>\r\n                <Paper className={classes.mainFrame}>\r\n                    <Helmet>\r\n                        <title>Nuevo Pull Request</title>\r\n                    </Helmet>\r\n                    <Typography variant={\"h6\"} paragraph>Agregar Pull Request</Typography>\r\n                    <form onSubmit={this.createPr}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item md={12}>\r\n                                <TextField\r\n                                    label=\"Nombre\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    type=\"text\"\r\n                                    autoFocus\r\n                                    value={name}\r\n                                    onChange={this.onChange('name')}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={12}>\r\n                                <TextField\r\n                                    label=\"Descripcion\"\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    type=\"text\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    value={description}\r\n                                    onChange={this.onChange('description')}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item md={5}>\r\n                                <FormControl required fullWidth>\r\n                                    <InputLabel id=\"compare-branch-field-label\">Origen</InputLabel>\r\n                                    <Select labelId=\"compare-branch-field-label\"\r\n                                            value={compareBranch} onChange={this.onChange(\"compareBranch\")}>\r\n                                        <MenuItem value=\"\" disabled>Select compare branch</MenuItem>\r\n                                        {branches.map((branch, key) => (\r\n                                            <MenuItem disabled={branch.name === baseBranch} key={key}\r\n                                                      value={branch.name}>{branch.name}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid container item md={2} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                <Typography align=\"center\" variant=\"caption\">de</Typography>\r\n                            </Grid>\r\n                            <Grid item md={5}>\r\n                                <FormControl required fullWidth>\r\n                                    <InputLabel id=\"base-branch-field-label\">Destino</InputLabel>\r\n                                    <Select labelId=\"base-branch-field-label\" value={baseBranch}\r\n                                            onChange={this.onChange(\"baseBranch\")}>\r\n                                        <MenuItem value=\"\" disabled>Select base branch</MenuItem>\r\n                                        {branches.map((branch, key) => (\r\n                                            <MenuItem disabled={branch.name === compareBranch} key={key}\r\n                                                      value={branch.name}>{branch.name}</MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item md={12}>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={useDefaultAuthor} color={\"primary\"}\r\n                                                     onChange={this.onChange(\"useDefaultAuthor\")}\r\n                                                     value={useDefaultAuthor}/>}\r\n                                    label=\"Usar Autor por defecto del repositorio\"/>\r\n                            </Grid>\r\n                            {!useDefaultAuthor && (\r\n                                <>\r\n                                    <Grid item md={6}>\r\n                                        <TextField\r\n                                            label=\"Nombre del Autor\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            type=\"text\"\r\n                                            value={authorName}\r\n                                            onChange={this.onChange(\"authorName\")}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item md={6}>\r\n                                        <TextField\r\n                                            label=\"Email del Autor\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            type=\"email\"\r\n                                            value={authorEmail}\r\n                                            onChange={this.onChange(\"authorEmail\")}\r\n                                        />\r\n                                    </Grid>\r\n                                </>\r\n                            )}\r\n                            <Grid item md={12}>\r\n                                <FormControl required fullWidth>\r\n                                    <InputLabel id=\"status-field-label\">Status</InputLabel>\r\n                                    <Select labelId=\"status-field-label\" value={status}\r\n                                            onChange={this.onChange(\"status\")}>\r\n                                        <MenuItem value=\"\" disabled>Select status</MenuItem>\r\n                                        <MenuItem value={0}>Open</MenuItem>\r\n                                        {/*<MenuItem value={1}>Close</MenuItem>*/}\r\n                                        <MenuItem value={2}>Merged</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item container md={12} justify=\"flex-end\">\r\n                                <Button disabled={loading} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                    Crear Pull Request\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item md={12}>\r\n                                {loading && (\r\n                                    <LinearProgress variant=\"indeterminate\"/>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nPRCreateView.propTypes = {\r\n    classes: PropTypes.object,\r\n    branches: PropTypes.array,\r\n    showMessage: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    branches: state.branches.branches,\r\n    createState: state.prs.create\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({fetchBranches, createPr}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(PRCreateView));\r\n","import {AppLayout} from \"./layouts\";\r\nimport {RepoView, NewRepoView, BranchesView, BranchView, CommitView, PRListView, PRCreateView} from './views';\r\nconst defaultRoutes = [\r\n    {\r\n        path: '/repo',\r\n        component: RepoView\r\n    },\r\n    {\r\n        path: '/branches',\r\n        component: BranchesView\r\n    },\r\n    {\r\n      path: '/branch',\r\n      component: BranchView\r\n    },\r\n    {\r\n        path: '/commit/:commit',\r\n        component: CommitView\r\n    },\r\n    {\r\n        path: '/prs',\r\n        exact: true,\r\n        component: PRListView\r\n    },\r\n    {\r\n        path: '/prs/add',\r\n        exact: true,\r\n        component: PRCreateView\r\n    }\r\n];\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: NewRepoView\r\n    },\r\n    {\r\n        path: '/*',\r\n        exact: true,\r\n        component: AppLayout,\r\n        routes: defaultRoutes,\r\n    },\r\n\r\n\r\n];\r\n\r\nexport default routes;","const settings = {\r\n    apiPath: 'http://localhost:5000'\r\n}\r\n\r\nexport {\r\n    settings,\r\n}","import superagent from 'superagent';\r\nimport {settings} from '../../config';\r\n\r\nconst methods = [\"get\", \"post\", \"put\", \"del\", \"patch\"]\r\n\r\nfunction formatUrl(path) {\r\n    const adjustedPath = path[0] !== '/' ? `/${path}` : path;\r\n    return `${settings.apiPath}${adjustedPath}`;\r\n}\r\n\r\nexport default class Api {\r\n    constructor() {\r\n        methods.forEach(method => {\r\n            this[method] = (path, {params, data, type, headers = {}} = {}) =>\r\n                new Promise((resolve, reject) => {\r\n                    let request = superagent[method](formatUrl(path));\r\n                    if(params) request.query(params);\r\n                    request.set('Accept', 'application/json');\r\n                    if(type) request.type(type);\r\n                    Object.keys(headers).forEach(key => request.set(key, headers[key]));\r\n                    if(data) request.send(data);\r\n                    request.end(\r\n                        (err, {body} = {}) => (err? reject(err) : resolve(body)),\r\n                    )\r\n                });\r\n        });\r\n    }\r\n}","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {blue, pink} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: pink\r\n    }\r\n});\r\n\r\nexport default theme;","import {FETCH_REPO, CLONE_REPO, DELETE_REPO} from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    url: '',\r\n    fetch: {\r\n        loading: false,\r\n        loaded: false,\r\n        error: null,\r\n    },\r\n    clone: {\r\n        loading: false,\r\n        loaded: false,\r\n        error: null,\r\n    },\r\n    delete: {\r\n        loading: false,\r\n        loaded: false,\r\n        error: null,\r\n    },\r\n};\r\n\r\nfunction getRequestKey(actionType) {\r\n    return actionType.split('_')[0].toLowerCase();\r\n}\r\n\r\nexport default function repo(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case `${FETCH_REPO}_PENDING`:\r\n        case `${CLONE_REPO}_PENDING`:\r\n        case `${DELETE_REPO}_PENDING`:\r\n            return {\r\n                ...state,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: true,\r\n                    loaded: false,\r\n                    error: null\r\n                },\r\n            }\r\n        case `${FETCH_REPO}_SUCCESS`:\r\n        case `${CLONE_REPO}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                name: action.result.name,\r\n                url: action.result.url,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null\r\n                },\r\n            }\r\n        case `${DELETE_REPO}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                url: '',\r\n                name: '',\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null\r\n                },\r\n                fetch: {\r\n                    loading: false,\r\n                    loaded: false,\r\n                    error: null,\r\n                },\r\n                clone: {\r\n                    loading: false,\r\n                    loaded: false,\r\n                    error: null\r\n                }\r\n            }\r\n        case `${FETCH_REPO}_FAIL`:\r\n        case `${CLONE_REPO}_FAIL`:\r\n        case `${DELETE_REPO}_FAIL`:\r\n            return {\r\n                ...state,\r\n                name: '',\r\n                url: '',\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: false,\r\n                    error: action.error\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {FETCH_BRANCHES} from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n    branches: [],\r\n    loading: false,\r\n    loaded: false,\r\n    error: null\r\n};\r\n\r\nexport default function branches(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n\r\n        case `${FETCH_BRANCHES}_PENDING`:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded: false,\r\n                error: null\r\n            }\r\n        case `${FETCH_BRANCHES}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                branches: action.result,\r\n                loading: false,\r\n                loaded: true,\r\n                error: null\r\n            }\r\n        case `${FETCH_BRANCHES}_FAIL`:\r\n            return {\r\n                ...state,\r\n                branches: [],\r\n                loading: false,\r\n                loaded: false,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import {FETCH_BRANCH, FETCH_COMMIT} from \"../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n    branch: {\r\n        commits: [],\r\n        branchName: '',\r\n        loading: false,\r\n        loaded: false,\r\n        error: null\r\n    },\r\n    commit: {\r\n        commitSha: '',\r\n        author: {name: '', email: ''},\r\n        date: '',\r\n        message: '',\r\n        tree: [],\r\n        loading: false,\r\n        loaded: false,\r\n        error: null,\r\n    }\r\n}\r\n\r\nexport default function commits(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case `${FETCH_BRANCH}_PENDING`:\r\n            return {\r\n                ...state,\r\n                branch: {\r\n                    ...state.branch,\r\n                    loading: true,\r\n                    loaded: false,\r\n                    error: null\r\n                }\r\n            }\r\n        case `${FETCH_COMMIT}_PENDING`:\r\n            return {\r\n                ...state,\r\n                commit: {\r\n                    ...state.commit,\r\n                    loading: true,\r\n                    loaded: false,\r\n                    error: null\r\n                }\r\n            }\r\n        case `${FETCH_BRANCH}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                branch: {\r\n                    commits: action.result.commits,\r\n                    branchName: action.result.name,\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null,\r\n                }\r\n            }\r\n        case `${FETCH_COMMIT}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                commit: {\r\n                    commitSha: action.result.commit,\r\n                    author: action.result.author,\r\n                    date: action.result.date,\r\n                    message: action.result.message,\r\n                    tree: action.result.tree,\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null\r\n                }\r\n            }\r\n        case `${FETCH_BRANCH}_FAIL`:\r\n            return {\r\n                ...state,\r\n                branch: {\r\n                    ...state.branch,\r\n                    loading: false,\r\n                    loaded: false,\r\n                    error: action.error\r\n                }\r\n            }\r\n        case `${FETCH_COMMIT}_FAIL`:\r\n            return {\r\n                ...state,\r\n                commit: {\r\n                    ...state.commit,\r\n                    loading: false,\r\n                    loaded: false,\r\n                    error: action.error\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {FETCH_PR, LIST_PRS, CREATE_PR, UPDATE_PR_STATUS, MERGE_PR} from \"../constants/ActionTypes\";\r\n\r\nconst loadTemplate = {\r\n    loading: false,\r\n    loaded: false,\r\n    error: null\r\n}\r\nconst initialState = {\r\n    pr: {},\r\n    prs: [],\r\n\r\n    fetch: loadTemplate,\r\n    list: loadTemplate,\r\n    create: loadTemplate,\r\n    update: loadTemplate,\r\n    merge: loadTemplate,\r\n}\r\n\r\nfunction getRequestKey(actionType) {\r\n    return actionType.split('_')[0].toLowerCase();\r\n}\r\n\r\nexport default function prs(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case `${FETCH_PR}_PENDING`:\r\n        case `${LIST_PRS}_PENDING`:\r\n        case `${CREATE_PR}_PENDING`:\r\n        case `${UPDATE_PR_STATUS}_PENDING`:\r\n        case `${MERGE_PR}_PENDING`:\r\n            return {\r\n                ...state,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: true,\r\n                    loaded: false,\r\n                    error: null\r\n                }\r\n            }\r\n\r\n        case `${FETCH_PR}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                pr: action.result,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null\r\n                }\r\n            }\r\n        case `${LIST_PRS}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                prs: action.result,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null\r\n                }\r\n            }\r\n\r\n        case `${CREATE_PR}_SUCCESS`:\r\n        case `${UPDATE_PR_STATUS}_SUCCESS`:\r\n        case `${MERGE_PR}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: true,\r\n                    error: null\r\n                }\r\n            }\r\n\r\n        case `${FETCH_PR}_FAIL`:\r\n        case `${LIST_PRS}_FAIL`:\r\n        case `${CREATE_PR}_FAIL`:\r\n        case `${UPDATE_PR_STATUS}_FAIL`:\r\n        case `${MERGE_PR}_FAIL`:\r\n            return {\r\n                ...state,\r\n                [getRequestKey(action.type)]: {\r\n                    loading: false,\r\n                    loaded: false,\r\n                    error: action.error\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { reducer as reduxAsyncConnect } from 'redux-connect';\r\nimport repo from \"./repos\";\r\nimport branches from \"./branches\";\r\nimport commits from \"./commits\";\r\nimport prs from \"./prs\";\r\nconst reducers = {\r\n    reduxAsyncConnect,\r\n    repo,\r\n    branches,\r\n    commits,\r\n    prs\r\n};\r\nexport default reducers;","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport reducers from './reducers';\r\n\r\nimport { api } from './middleware';\r\n\r\nconst configureStore = (history, apiHelper) => {\r\n    const middlewares = applyMiddleware(\r\n            routerMiddleware(history),\r\n            /*crashReporter,*/\r\n            thunk,\r\n            api(apiHelper)\r\n        );\r\n    let initialState = {};\r\n    const store = createStore(\r\n        combineReducers({\r\n            router: connectRouter(history),\r\n            ...reducers,\r\n        }),\r\n        initialState,\r\n        middlewares,\r\n    );\r\n\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n","\r\nexport default api => ({dispatch, getState}) => next => action => {\r\n    if(typeof action === 'function') return action(dispatch, getState);\r\n    const {request, type, ...rest} = action;\r\n    let actionPromise;\r\n    if(!request) return next(action);\r\n\r\n    next({...rest, type: `${type}_PENDING`});\r\n\r\n    actionPromise = Array.isArray(request)?\r\n        Promise.all(request.map(item => api[item.op](item.path, {data: request.data, type: request.type, headers: request.headers}))) :\r\n        api[request.op] (request.path, {data: request.data, type: request.type, headers: request.headers});\r\n\r\n    actionPromise.then(\r\n        result => {\r\n            return next({...rest, result, type: `${type}_SUCCESS`});\r\n        },\r\n        error => {\r\n            next({...rest, error, type: `${type}_FAIL`})\r\n        }\r\n    )\r\n    return actionPromise;\r\n}\r\n\r\n","import {BrowserRouter} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {hydrate} from \"react-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {ConnectedRouter} from \"connected-react-router\";\r\nimport {createBrowserHistory} from \"history\";\r\nimport {ReduxAsyncConnect} from \"redux-connect\";\r\nimport routes from './routes';\r\nimport {Api} from './helpers';\r\nimport {MuiThemeProvider} from '@material-ui/core';\r\nimport theme from './theme';\r\n\r\nimport configureStore from './store';\r\n\r\nexport default () => {\r\n    const history = createBrowserHistory();\r\n    const api = new Api();\r\n\r\n    const store = configureStore(history,api);\r\n\r\n    hydrate(\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <BrowserRouter>\r\n                    <MuiThemeProvider theme={theme}>\r\n                        <ReduxAsyncConnect routes={routes}/>\r\n                    </MuiThemeProvider>\r\n                </BrowserRouter>\r\n            </ConnectedRouter>\r\n        </Provider>,\r\n        document.getElementById('root'),\r\n    );\r\n};","import client from './start-client';\r\n\r\nclient();\r\n\r\n"],"sourceRoot":""}